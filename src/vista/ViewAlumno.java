/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.time.LocalDate;
import entidades.Alumno;
import java.sql.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import persistencia.AlumnoData;

/**
 *
 * @author thefl
 */
public class ViewAlumno extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalFrameAlumno
     */
    public ViewAlumno() {
        initComponents();
        checkEstado.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        lbAlumnos = new javax.swing.JLabel();
        lbLegajo = new javax.swing.JLabel();
        tfIdAlum = new javax.swing.JTextField();
        bBuscar = new javax.swing.JButton();
        lbApellido = new javax.swing.JLabel();
        tfApellido = new javax.swing.JTextField();
        lbNombre = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        lbDNI = new javax.swing.JLabel();
        tfDNI = new javax.swing.JTextField();
        lbFechaNac = new javax.swing.JLabel();
        lbEstado = new javax.swing.JLabel();
        checkEstado = new javax.swing.JCheckBox();
        bGuardar = new javax.swing.JButton();
        bBorrar = new javax.swing.JButton();
        bActualizar = new javax.swing.JButton();
        bLimpiar = new javax.swing.JButton();
        lbResEstado = new javax.swing.JLabel();
        bSalirAlum = new javax.swing.JButton();
        bLista = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tTabla = new javax.swing.JTable();
        bActivar = new javax.swing.JButton();
        dFecha = new com.toedter.calendar.JDateChooser();

        jCheckBox1.setText("jCheckBox1");

        lbAlumnos.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbAlumnos.setText("ALUMNOS");

        lbLegajo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbLegajo.setText("Legajo");

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        lbApellido.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbApellido.setText("Apellido");

        lbNombre.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbNombre.setText("Nombre");

        lbDNI.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbDNI.setText("DNI");

        lbFechaNac.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbFechaNac.setText("Fecha Nac.");

        lbEstado.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lbEstado.setText("Estado");

        bGuardar.setText("Guardar");
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        bBorrar.setText("Borrar");
        bBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBorrarActionPerformed(evt);
            }
        });

        bActualizar.setText("Actualizar");
        bActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActualizarActionPerformed(evt);
            }
        });

        bLimpiar.setText("Limpiar");
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        bSalirAlum.setText("Salir");
        bSalirAlum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalirAlumActionPerformed(evt);
            }
        });

        bLista.setText("Listar Alumnos");
        bLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bListaActionPerformed(evt);
            }
        });

        tTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Apellido", "Nombre", "DNI", "Fecha Nac.", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tTabla);

        bActivar.setText("Activar");
        bActivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActivarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bGuardar)
                                .addGap(18, 18, 18)
                                .addComponent(bActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(bActivar)
                                .addGap(18, 18, 18)
                                .addComponent(bLista)
                                .addGap(18, 18, 18)
                                .addComponent(bLimpiar)
                                .addGap(18, 18, 18)
                                .addComponent(bBorrar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bSalirAlum))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(522, 522, 522)
                                .addComponent(lbResEstado)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbLegajo)
                            .addComponent(lbApellido)
                            .addComponent(lbDNI)
                            .addComponent(lbFechaNac)
                            .addComponent(lbNombre)
                            .addComponent(lbEstado))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkEstado)
                                .addGap(550, 550, 550))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(tfApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                            .addComponent(tfIdAlum))
                                        .addGap(28, 28, 28)
                                        .addComponent(bBuscar))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(202, 202, 202)
                                        .addComponent(lbAlumnos))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(dFecha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(tfDNI, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                        .addComponent(tfNombre, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lbAlumnos)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfIdAlum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscar)
                    .addComponent(lbLegajo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbApellido))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNombre))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbDNI))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbFechaNac)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbEstado)
                            .addComponent(checkEstado))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bGuardar)
                            .addComponent(bBorrar)
                            .addComponent(bActualizar)
                            .addComponent(bLimpiar)
                            .addComponent(bSalirAlum)
                            .addComponent(bActivar)
                            .addComponent(bLista))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(lbResEstado))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        AlumnoData alumD = new AlumnoData();
        Alumno alum;
        String apellido = tfApellido.getText();
        String nombre = tfNombre.getText();
        int dni = Integer.parseInt(tfDNI.getText());
        Date fechaSql = new Date(dFecha.getDate().getTime());
        LocalDate fechaNac = fechaSql.toLocalDate();
        boolean estado = checkEstado.isSelected();
        alum = new Alumno(dni, apellido, nombre, fechaNac, estado);
        alumD.guardarAlumno(alum);
    }//GEN-LAST:event_bGuardarActionPerformed

    private void bSalirAlumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalirAlumActionPerformed
        dispose();
    }//GEN-LAST:event_bSalirAlumActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        AlumnoData alumD = new AlumnoData();
        Alumno alum;
        if (!tfIdAlum.getText().equals("")) {
            int id = Integer.parseInt(tfIdAlum.getText());
            alum = alumD.buscarAlumno(id);
            tfApellido.setText(alum.getApellido());
            tfDNI.setText(alum.getDni() + "");
            dFecha.setDate(Date.valueOf(alum.getFechaNacimiento()));
            tfIdAlum.setText(alum.getIdAlumno() + "");
            tfNombre.setText(alum.getNombre());
            checkEstado.setSelected(alum.isEstado());
        } else if (!tfDNI.getText().equals("")) {
            int dni = Integer.parseInt(tfDNI.getText());
            alum = alumD.buscarAlumnoPorDni(dni);
            tfApellido.setText(alum.getApellido());
            tfDNI.setText(alum.getDni() + "");
            dFecha.setDate(Date.valueOf(alum.getFechaNacimiento()));
            tfIdAlum.setText(alum.getIdAlumno() + "");
            tfNombre.setText(alum.getNombre());
            checkEstado.setSelected(alum.isEstado());
        }
    }//GEN-LAST:event_bBuscarActionPerformed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        limpiar();
        AlumnoData alumD = new AlumnoData();
        DefaultTableModel tabla = new DefaultTableModel();
        List<Alumno> dato;
        String[] fila = new String[6];
        tabla.addColumn("ID");
        tabla.addColumn("Apellido");
        tabla.addColumn("Nombre");
        tabla.addColumn("DNI");
        tabla.addColumn("Fecha de Nacimiento");
        tabla.addColumn("Estado");
        dato = alumD.listarAlumnos();
        for (int i = 0; i < dato.size(); i++) {
            fila[0] = "";
            fila[1] = "";
            fila[2] = "";
            fila[3] = "";
            fila[4] = "";
            fila[5] = "";
            tabla.addRow(fila);
        }
        tTabla.setModel(tabla);
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void bListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bListaActionPerformed
        AlumnoData alumD = new AlumnoData();
        DefaultTableModel tabla = new DefaultTableModel();
        List<Alumno> dato;
        String[] fila = new String[6];
        tabla.addColumn("ID");
        tabla.addColumn("Apellido");
        tabla.addColumn("Nombre");
        tabla.addColumn("DNI");
        tabla.addColumn("Fecha de Nacimiento");
        tabla.addColumn("Estado");
        dato = alumD.listarAlumnos();
        for (int i = 0; i < dato.size(); i++) {
            fila[0] = dato.get(i).getIdAlumno() + "";
            fila[1] = dato.get(i).getApellido();
            fila[2] = dato.get(i).getNombre();
            fila[3] = dato.get(i).getDni()+"";
            fila[4] = dato.get(i).getFechaNacimiento()+"";
            fila[5] = dato.get(i).isEstado()+"";
            tabla.addRow(fila);
        }
        tTabla.setModel(tabla);
    }//GEN-LAST:event_bListaActionPerformed

    private void bActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActualizarActionPerformed
        AlumnoData alumD = new AlumnoData();
        int id = Integer.parseInt(tfIdAlum.getText());
        String apellido = tfApellido.getText();
        String nombre = tfNombre.getText();
        int dni = Integer.parseInt(tfDNI.getText());
        Date fechaSql = new Date(dFecha.getDate().getTime());
        LocalDate fechaNac = fechaSql.toLocalDate();
        boolean estado = checkEstado.isSelected();
        Alumno alum = new Alumno(id,dni,apellido,nombre,fechaNac,estado);
        alumD.modificarAlumno(alum);
    }//GEN-LAST:event_bActualizarActionPerformed

    private void bBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBorrarActionPerformed
        int id = Integer.parseInt(tfIdAlum.getText());
        AlumnoData alumD = new AlumnoData();
        alumD.eliminarAlumno(id);
    }//GEN-LAST:event_bBorrarActionPerformed

    private void bActivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActivarActionPerformed
        int id = Integer.parseInt(tfIdAlum.getText());
        AlumnoData alumD = new AlumnoData();
        alumD.activarAlumno(id);
        
    }//GEN-LAST:event_bActivarActionPerformed

    public void limpiar() {
        tfApellido.setText("");
        tfDNI.setText("");
        tfIdAlum.setText("");
        tfNombre.setText("");
        checkEstado.setSelected(false);
        dFecha.setDate(null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bActivar;
    private javax.swing.JButton bActualizar;
    private javax.swing.JButton bBorrar;
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bGuardar;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bLista;
    private javax.swing.JButton bSalirAlum;
    private javax.swing.JCheckBox checkEstado;
    private com.toedter.calendar.JDateChooser dFecha;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAlumnos;
    private javax.swing.JLabel lbApellido;
    private javax.swing.JLabel lbDNI;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JLabel lbFechaNac;
    private javax.swing.JLabel lbLegajo;
    private javax.swing.JLabel lbNombre;
    private javax.swing.JLabel lbResEstado;
    private javax.swing.JTable tTabla;
    private javax.swing.JTextField tfApellido;
    private javax.swing.JTextField tfDNI;
    private javax.swing.JTextField tfIdAlum;
    private javax.swing.JTextField tfNombre;
    // End of variables declaration//GEN-END:variables
}
